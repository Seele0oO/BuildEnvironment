name: Docker Build and Push

on:
  workflow_dispatch:  # 手动触发
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: docker.io
  GHCR_REGISTRY: ghcr.io
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  REPOSITORY_NAME: buildenvironment
  GHCR_REPOSITORY_NAME: buildenvironment
  GHCR_USERNAME: ${{ github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log into GitHub Container Registry (GHCR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Filter images to build
        id: filter_images
        run: |
          BUILD_IMAGES=""
          for dir in docker/*/; do
            tag=$(basename "${dir%/}")
            if [ -f "${dir}Dockerfile.lock" ]; then
              echo "Skipping $tag due to Dockerfile.lock"
              continue
            fi
            BUILD_IMAGES+="$tag "
          done
          echo "Filtered images: $BUILD_IMAGES"
          echo "BUILD_IMAGES=$BUILD_IMAGES" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          LOWER_GITHUB_USER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')

          for tag in $BUILD_IMAGES; do
            docker_dir="docker/$tag"

            docker_hub_image="${{ env.DOCKER_HUB_USERNAME }}/${{ env.REPOSITORY_NAME }}:${tag}"
            ghcr_image="${{ env.GHCR_REGISTRY }}/${LOWER_GITHUB_USER}/$(echo "${{ env.GHCR_REPOSITORY_NAME }}" | tr '[:upper:]' '[:lower:]'):${tag}"

            echo "Building and pushing: $docker_hub_image and $ghcr_image"

            docker buildx build \
              --push \
              --tag "$docker_hub_image" \
              --tag "$ghcr_image" \
              --file "${docker_dir}/Dockerfile" \
              --cache-from "type=gha" \
              --cache-to "type=gha,mode=max" \
              .
          done
